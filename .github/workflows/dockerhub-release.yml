name: Publish latest images to Docker Hub

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * MON"

jobs:
  # Sync the 'latest' tag from GAR to Docker Hub
  #
  # From your GitHub repo clock Settings. In the left menu, click Environments.
  # Click New environment, set the name production, and click Configure environment.
  # Check the "Required reviewers" box and enter at least one user or team name.
  promote-latest:
    if: (github.event_name == 'schedule') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    environment: "production"
    permissions:
      contents: "read"
      id-token: "write"
    env:
      WORKLOAD_IDENTITY_POOL_ID: projects/665270063338/locations/global/workloadIdentityPools/workspace-images-github-actions/providers/workspace-images-gha-provider
      GAR_IMAGE_REGISTRY: ghcr.io
      DH_IMAGE_REGISTRY: ghcr.io
      IAM_SERVICE_ACCOUNT: workspace-images-gha-sa@gitpod-artifacts.iam.gserviceaccount.com
      SKOPEO_VERSION: 1

    steps:
      - name: üì• Checkout workspace-images
        uses: actions/checkout@v4
        with:
          repository: synopkg/workspace-images

      - name: üîß Setup tools
        run: |
          sudo apt-get install python3-pip
          sudo pip3 install yq

      - name: ‚úçüèΩ Login to Docker Hub using skopeo
        env:
          docker_user: ${{ github.actor }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo -E skopeo login -u ${{ env.docker_user }} --password=${{ env.docker_password }} ${{ env.DH_IMAGE_REGISTRY }}

      - name: üê≥ Sync latest tag of images to Docker Hub
        env:
          SKOPEO_AUTH_DIR: ${{env.SKOPEO_AUTH_DIR}}
        run: |
          IMAGES=$(cat .github/promote-images.yml | yq '."ghcr.io/synopkg-artifacts/docker-dev"."images-by-tag-regex"|keys[]' -r)
          for IMAGE in $IMAGES;
          do
            sudo -E skopeo copy --format=oci --dest-oci-accept-uncompressed-layers --retry-times=5 \
            docker://${{ env.GAR_IMAGE_REGISTRY }}/synopkg-artifacts/docker-dev/$IMAGE:latest \
            docker://${{ env.DH_IMAGE_REGISTRY }}/synopkg/$IMAGE:latest
          done
  notify:
    if: always() && ((github.event_name == 'schedule') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'))
    needs: promote-latest
    runs-on: ubuntu-latest
    steps:
      - name: The release was successful
        id: slack-success
        if: needs.promote-latest.result == 'success'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "The release was successful :rocket:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.RELEASE_NOTIFY_WEBHOOK }}
      - name: The release was not successful
        id: slack-failure
        if: needs.promote-latest.result != 'success'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "${{ format('The release had trouble :construction:, the result was: {0}', needs.promote-latest.result) }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.RELEASE_NOTIFY_WEBHOOK }}
